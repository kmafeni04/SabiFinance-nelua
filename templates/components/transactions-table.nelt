{# TODO: Implementing sorting of the table based on the th element using radio buttons #}
{% local nelt = require "nelt" %}
{% local nttp = require "nttp" %}
{% local norm = require "norm" %}

{% local function transactions_table(tp: *nelt.Template, self: *nttp.Server) %}
  {% local transactions = (@*sequence(norm.Model.Inst))(tp.data) %}
  {% local transaction_income: number %}
  {% local transaction_expenses: number %}
  {% for _, transaction in ipairs(transactions) do %}
    {% if transaction:get_col("type") == "Income" then %}
      {% local num = transaction:get_col("amount") %}
      {% transaction_income = transaction_income + tonumber(num) %}
    {% elseif transaction:get_col("type") == "Expense" then %}
      {% local num = transaction:get_col("amount") %}
      {% transaction_expenses = transaction_expenses + tonumber(num) %}
    {% end %}
  {% end %}
  <table id="transactions_table">
    <style>
      me {
        width: 100%;
        border-collapse: collapse;
        text-align: left;

        & tr:nth-child(2n) {
          background-color: var(--bg-clr);
        }

        & td,
        & th {
          padding: var(--padding-xs);
        }
      }

      @media md- {
        me {
          & thead {
            display: none;
          }

          & tbody {
            display: flex;
            flex-direction: column;
            gap: var(--gap-sm);
          }

          & tr {
            display: flex;
            flex-direction: column;
            gap: var(--gap-xs);
          }

          & td {
            display: flex;
            align-items: center;
            gap: var(--gap-xs);

            &:first-child {
              display: none;
            }

            &::before {
              content: attr(data-cell) ": ";
              font-weight: 700;
              text-transform: capitalize;
            }
          }
        }
      }
    </style>
    <thead>
      <tr>
        <th>#</th>
        <th>Date:</th>
        <th>Name:</th>
        <th>Amount:</th>
        <th>Type:</th>
        <th>Desc:</th>
        <th>Actions:</th>
      </tr>
    </thead>
    <tbody id="transactions_table_body">
      {% for i, transaction in ipairs(transactions) do %}
        {% local id =  transaction:get_col("id") %}
        {% local description =  transaction:get_col("description") %}
        {% local amount = transaction:get_col("amount") %}
        <tr id="transaction_{{ id }}">
          <td>{{ i }}.</td>
          <td data-cell="date"
              data-text="const date = new Date({{ transaction:get_col("time") }} * 1000); const day = ('0' + date.getDate()).slice(-2); const month = ('0' + (date.getMonth() + 1)).slice(-2); date.getFullYear()+'-'+(month)+'-'+(day);">
          </td>
          <td data-cell="name">{{ transaction:get_col("name") }}</td>
          <td data-cell="amount">â‚¦{{ (" %.2f"):format(tonumber(amount) ) }}</td>
          <td data-cell="type">{{ transaction:get_col("type") }}</td>
          <td data-cell="description">{{ description ~= "" and description or "-" }}</td>
          <td data-cell="actions" style="display: flex; gap: var(--gap-xs)">
            <button data-on-click="confirm('Are you sure you would like to delete this record?') && @delete('{{ self:url_for("transaction", { route_params = map!(string, string, { id = id }) }) }}')"
                    class="btn">Delete</button>
            <button data-on-click="@get('{{ self:url_for("update_transaction", { route_params = map!(string, string, { id = id }) }) }}')"
                    class="btn">Update</button>
          </td>
        </tr>
      {% end %}
    </tbody>
  </table>
{% end %}

{% return transactions_table %}
