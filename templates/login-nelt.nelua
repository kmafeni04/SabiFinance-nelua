local nelt = require "..vendor.nelt.nelt"
local http = require "..vendor.http-nelua.http"
local navbar = require ".components.navbar-nelt"
local layout = require ".layout-nelt"
local function content(tp: *nelt.Template, self: *http.Server)
navbar(tp, self)
local errors: sequence(string)
if self.req.params["errors"] ~= "" then
for error in self.req.params["errors"]:gmatch("([^\n]+\n)") do
errors:push(error)
end
end
tp:write([====[<div>
    <style>
      me {
        display: flex;
        align-items: center;
        justify-content: center;
        min-height: 100svh;
        padding-top: var(--nav-height);

        & form {
          display: flex;
          flex-direction: column;
          gap: var(--gap-sm);
          padding: var(--padding-md);
          background-color: white;
          border-radius: var(--radius-sm);

          &>div {
            display: flex;
            flex-direction: column;
            gap: var(--gap-sm);

            & label {
              font-weight: 700;
            }
          }
        }
      }
    </style>
    <form action="]====])
tp:escape(self:url_for("login"))
tp:write([====[" method="POST">
      <h1>Welcome back</h1>
      <div>
        <label for="username">Username</label>
        <input required
               class="input"
               type="text"
               name="username"
               id="username"
               value="]====])
tp:escape(self.req.params['username'])
tp:write([====[">
      </div>
      <div>
        <label for="password">Password</label>
        <input required
               class="input"
               type="password"
               name="password"
               id="password"
               value="]====])
tp:escape(self.req.params['password'])
tp:write([====[">
      </div>
      <p>
        Don't have an account? <a href="]====])
tp:escape(self:url_for("signup"))
tp:write([====[">Sign Up</a>
      </p>]====])
if #errors > 0 then
tp:write([====[<ul>
          <style>
            me {
              display: flex;
              flex-direction: column;
              gap: var(--gap-xs);
              color: red;
              list-style-position: inside;

            }
          </style>]====])
for _, error in ipairs(errors) do
tp:write([====[<li>]====])
tp:escape(error)
tp:write([====[</li>]====])
end
tp:write([====[</ul>]====])
end
tp:write([====[<button class="btn">Log in</button>
    </form>
  </div>]====])
end
local function login(tp: *nelt.Template, self: *http.Server)
layout(tp, "", content, self)
end
return login
